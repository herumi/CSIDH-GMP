#include"fp.hpp"

Fp Fp::p;
Fp Fp::inv4;
Fp Fp::sqrt4;
size_t Fp::nbit;
Fp Fp::R;
Fp Fp::R2;
Fp Fp::nr;
Fp Fp::mrR2;
Fp Fp::MR2;
Fp Fp::MR4;

int main()
{
    Fp x, y;
    Fp z;
    mpz_class in_x, in_y, in_p, result;
    in_x = "1000000000000000000000657438932044359849350";
    in_y = "5326738796327623094747867617954605554069371494832722337612446642054009560026576537626892113026381253624626941643949444792662881241621373288942880288065680";
    in_p = "5326738796327623094747867617954605554069371494832722337612446642054009560026576537626892113026381253624626941643949444792662881241621373288942880288065659";


    mpz_export(&Fp::p.inv4.buf, NULL, -1, 8, 0, 0, mpz_class("1331684699081905773686966904488651388517342873708180584403111660513502390006644134406723028256595313406156735410987361198165720310405343322235720072016415").get_mpz_t());
    mpz_export(&Fp::p.sqrt4.buf, NULL, -1, 8, 0, 0, mpz_class("72984510660328627668487265992516213834621203782665312994583680849552234545871").get_mpz_t());
    Fp::p.nbit = 511;
    mpz_export(&Fp::p.R.buf, NULL, -1, 8, 0, 0, mpz_class("6703903964971298549787012499102923063739682910296196688861780721860882015036773488400937149083451713845015929093243025426876941405973284973216824503042047").get_mpz_t());
    mpz_export(&Fp::p.R2.buf, NULL, -1, 8, 0, 0, mpz_class("1032312334021767149891928024133341961156775772779044637692888609886692159219829053969396827895169639458311379179211658124290421880650098963926249002436041").get_mpz_t());
    mpz_export(&Fp::p.nr.buf, NULL, -1, 8, 0, 0, mpz_class("4648943738516491079755353375009763753751649870163419510591469415438864277366534547184950551625493863052632292052244681369519164709307558804992291140151629").get_mpz_t());

    mpz_export(&Fp::p.mrR2.buf, NULL, -1, 8, 0, 0, mpz_class("1377165168643675455039144881148317509670311415463474351249334079806872455010196950774045036057070460220388987449293580634214060164351911684273944214976389").get_mpz_t());
    mpz_export(&Fp::p.MR2.buf, NULL, -1, 8, 0, 0, mpz_class("2754330337287350910078289762296635019340622830926948702498668159613744910020393901548090072114140920440777974898587161268428120328703823368547888429952778").get_mpz_t());
    mpz_export(&Fp::p.MR4.buf, NULL, -1, 8, 0, 0, mpz_class("181921878247078725408711906638664484611874167021175067384889677173480260014211265469288031201900587256929008153224877744193359415786273448152896571839897").get_mpz_t());


    mpz_export(&x.buf, NULL, -1, 8, 0, 0, in_x.get_mpz_t());
    mpz_export(&y.buf, NULL, -1, 8, 0, 0, in_y.get_mpz_t());
    mpz_export(&Fp::p.buf, NULL, -1, 8, 0, 0, in_p.get_mpz_t());

    mpz_class x_test, y_test, z_test;

    chrono::system_clock::time_point start, end;
    start = std::chrono::system_clock::now();

    /*計算確認*/
    //Fp::p.div(z, x, y);
    //mpz_import(result.get_mpz_t(), Fp::N, -1, 8, 0, 0, z.buf);
    //cout << "result:" << result << endl;

    /*ベンチ*/
    for (int i = 0; i < 10000; i++) {
        mpn_random(x.buf, Fp::N - 1);
        mpn_random(y.buf, Fp::N - 1);


        //mpz_import(x_test.get_mpz_t(), 8, -1, Fp::N, 0, 0, x.buf);
        //mpz_import(y_test.get_mpz_t(), 8, -1, Fp::N, 0, 0, y.buf);

        Fp::p.pow(z, x, y);
        mpz_import(result.get_mpz_t(), 8, -1, Fp::N, 0, 0, z.buf);
        //cout << "result:" << result << endl;
    }

    end = std::chrono::system_clock::now();
    double elapsed = std::chrono::duration_cast<std::chrono::milliseconds>(end - start).count();
    cout << "time(全体): " << elapsed << endl;

}



